


										Type of input: random


Algorithm: shell sort
Size of input: 100000 element
Time to sort this array is: 32.370861 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 2372
........................................................
Algorithm: merge sort
Size of input: 100000 element
Time to sort this array is: 30.140941 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: heap sort
Size of input: 100000 element
Time to sort this array is: 39.200120 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 2459
........................................................
Algorithm: quick sort
Size of input: 100000 element
Time to sort this array is: 18.346759 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 2401
........................................................
Algorithm: quick3 sort
Size of input: 100000 element
Time to sort this array is: 17.849279 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 2418
........................................................
Algorithm: bubble sort
Size of input: 100000 element
Time to sort this array is: 42563.992445 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: selection sort
Size of input: 100000 element
Time to sort this array is: 13565.765804 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 1658
........................................................
Algorithm: insertion sort
Size of input: 100000 element
Time to sort this array is: 7613.608756 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................



										Type of input: duplicated


Algorithm: shell sort
Size of input: 100000 element
Time to sort this array is: 30.905568 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 37648
........................................................
Algorithm: merge sort
Size of input: 100000 element
Time to sort this array is: 32.813518 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: heap sort
Size of input: 100000 element
Time to sort this array is: 41.091803 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 41581
........................................................
Algorithm: quick sort
Size of input: 100000 element
Time to sort this array is: 18.095701 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 37674
........................................................
Algorithm: quick3 sort
Size of input: 100000 element
Time to sort this array is: 17.306900 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 37695
........................................................
Algorithm: bubble sort
Size of input: 100000 element
Time to sort this array is: 42567.606697 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: selection sort
Size of input: 100000 element
Time to sort this array is: 13609.249327 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 25157
........................................................
Algorithm: insertion sort
Size of input: 100000 element
Time to sort this array is: 7524.843326 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................



										Type of input: nsorted


Algorithm: shell sort
Size of input: 100000 element
Time to sort this array is: 8.617576 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: merge sort
Size of input: 100000 element
Time to sort this array is: 20.852822 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: heap sort
Size of input: 100000 element
Time to sort this array is: 32.103928 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 4437
........................................................
Algorithm: quick sort
Size of input: 100000 element
Time to sort this array is: 10364.906140 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 4586
........................................................
Algorithm: quick3 sort
Size of input: 100000 element
Time to sort this array is: 10398.516984 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 4586
........................................................
Algorithm: bubble sort
Size of input: 100000 element
Time to sort this array is: 12982.417084 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: selection sort
Size of input: 100000 element
Time to sort this array is: 13584.064930 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: insertion sort
Size of input: 100000 element
Time to sort this array is: 0.557966 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................



										Type of input: sorted


Algorithm: shell sort
Size of input: 100000 element
Time to sort this array is: 7.001362 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: merge sort
Size of input: 100000 element
Time to sort this array is: 23.954754 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: heap sort
Size of input: 100000 element
Time to sort this array is: 34.680251 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 4483
........................................................
Algorithm: quick sort
Size of input: 100000 element
Time to sort this array is: 10324.381841 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 4663
........................................................
Algorithm: quick3 sort
Size of input: 100000 element
Time to sort this array is: 10348.754352 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 4663
........................................................
Algorithm: bubble sort
Size of input: 100000 element
Time to sort this array is: 13024.183176 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: selection sort
Size of input: 100000 element
Time to sort this array is: 13545.199929 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: insertion sort
Size of input: 100000 element
Time to sort this array is: 0.411020 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................



										Type of input: rsorted


Algorithm: shell sort
Size of input: 100000 element
Time to sort this array is: 10.974779 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 1678
........................................................
Algorithm: merge sort
Size of input: 100000 element
Time to sort this array is: 25.508252 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: heap sort
Size of input: 100000 element
Time to sort this array is: 32.035155 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 3981
........................................................
Algorithm: quick sort
Size of input: 100000 element
Time to sort this array is: 10830.047652 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 168
........................................................
Algorithm: quick3 sort
Size of input: 100000 element
Time to sort this array is: 10920.261472 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 106
........................................................
Algorithm: bubble sort
Size of input: 100000 element
Time to sort this array is: 34249.027520 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: selection sort
Size of input: 100000 element
Time to sort this array is: 14475.600358 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 2341
........................................................
Algorithm: insertion sort
Size of input: 100000 element
Time to sort this array is: 15013.008303 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................



										Type of input: random


Algorithm: shell sort
Size of input: 100000 element
Time to sort this array is: 34.478361 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 2440
........................................................
Algorithm: merge sort
Size of input: 100000 element
Time to sort this array is: 34.436182 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: heap sort
Size of input: 100000 element
Time to sort this array is: 41.889325 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 2467
........................................................
Algorithm: quick sort
Size of input: 100000 element
Time to sort this array is: 18.306223 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 2491
........................................................
Algorithm: quick3 sort
Size of input: 100000 element
Time to sort this array is: 19.033789 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 2510
........................................................
Algorithm: bubble sort
Size of input: 100000 element
Time to sort this array is: 42642.311304 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: selection sort
Size of input: 100000 element
Time to sort this array is: 13566.826673 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 1627
........................................................
Algorithm: insertion sort
Size of input: 100000 element
Time to sort this array is: 7511.552113 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................



										Type of input: random


Algorithm: shell sort
Size of input: 1000000 element
Time to sort this array is: 432.437029 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 24220
........................................................
Algorithm: merge sort
Size of input: 1000000 element
Time to sort this array is: 354.476692 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: heap sort
Size of input: 1000000 element
Time to sort this array is: 517.362080 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 28059
........................................................
Algorithm: quick sort
Size of input: 1000000 element
Time to sort this array is: 207.719914 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 24316
........................................................
Algorithm: quick3 sort
Size of input: 1000000 element
Time to sort this array is: 207.305196 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 24252
........................................................
Algorithm: bubble sort
Size of input: 1000000 element
Time to sort this array is: 4403501.248891 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: selection sort
Size of input: 1000000 element
Time to sort this array is: 1441547.953754 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 16120
........................................................
Algorithm: insertion sort
Size of input: 1000000 element
Time to sort this array is: 806225.870615 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................



										Type of input: sorted


Algorithm: shell sort
Size of input: 1000000 element
Time to sort this array is: 90.087342 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: merge sort
Size of input: 1000000 element
Time to sort this array is: 237.473146 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: heap sort
Size of input: 1000000 element
Time to sort this array is: 362.636001 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 44755
........................................................



										Type of input: sorted





										Type of input: nsorted


Algorithm: bubble sort
Size of input: 1000000 element
Time to sort this array is: 1361828.402899 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: selection sort
Size of input: 1000000 element
Time to sort this array is: 1399958.809393 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................



										Type of input: sorted


Algorithm: bubble sort
Size of input: 1000000 element
Time to sort this array is: 1373233.117540 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: selection sort
Size of input: 1000000 element
Time to sort this array is: 1420119.923846 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................



										Type of input: random





										Type of input: random


Algorithm: quick sort
Size of input: 100 element
Time to sort this array is: 0.012750 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 2
........................................................



										Type of input: random


Algorithm: quick sort
Size of input: 10 element
Time to sort this array is: 0.001266 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................



										Type of input: random


Algorithm: quick sort
Size of input: 100000 element
Time to sort this array is: 20.086959 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 2421
........................................................



										Type of input: random


Algorithm: quick sort
Size of input: 1000000 element
Time to sort this array is: 236.179170 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 24526
........................................................



										Type of input: random





										Type of input: random


Algorithm: quick sort
Size of input: 20000000 element
Time to sort this array is: 5132.637041 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 483221
........................................................



										Type of input: sorted


Algorithm: quick sort
Size of input: 100 element
Time to sort this array is: 0.018177 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 3
........................................................



										Type of input: sorted


Algorithm: quick sort
Size of input: 100000 element
Time to sort this array is: 10514.502804 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 4742
........................................................



										Type of input: sorted





										Type of input: random





										Type of input: sorted


Algorithm: shell sort
Size of input: 200000 element
Time to sort this array is: 14.548601 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: merge sort
Size of input: 200000 element
Time to sort this array is: 52.185570 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: heap sort
Size of input: 200000 element
Time to sort this array is: 65.985533 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 8973
........................................................



										Type of input: sorted





										Type of input: sorted


Algorithm: quick sort
Size of input: 100000 element
Time to sort this array is: 10816.594843 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 4665
........................................................



										Type of input: duplicated





										Type of input: duplicated


Algorithm: shell sort
Size of input: 100000000 element
Time to sort this array is: 100867.461948 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 37725002
........................................................



										Type of input: duplicated


Algorithm: shell sort
Size of input: 100000000 element
Time to sort this array is: 104952.301293 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 37728531
........................................................
Algorithm: merge sort
Size of input: 100000000 element
Time to sort this array is: 44429.100738 miliseconds
Memory usage is: 0
This algorithm is stable
........................................................
Algorithm: heap sort
Size of input: 100000000 element
Time to sort this array is: 123378.575697 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 41435070
........................................................
Algorithm: quick sort
Size of input: 100000000 element
Time to sort this array is: 26763.196245 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 37727157
........................................................
Algorithm: quick3 sort
Size of input: 100000000 element
Time to sort this array is: 28723.734760 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 37722558
........................................................



										Type of input: sorted





										Type of input: sorted





										Type of input: sorted





										Type of input: sorted





										Type of input: sorted





										Type of input: sorted


Algorithm: quick sort
Size of input: 200000 element
Time to sort this array is: 486415.247399 miliseconds
Memory usage is: 0
This algorithm is not stable
Number of changes is: 9454
........................................................
